SourceFile: 
  SyntaxList: 
    ImportDeclaration: 
      ImportKeyword:  pre=[import] sep=[ ]
      ImportClause: 
        Identifier:  pre=[OtherName] sep=[ ]
      FromKeyword:  pre=[from] sep=[ ]
      StringLiteral:  pre=['./folder/AliasClass2']
      SemicolonToken:  pre=[;] sep=[\n\n\n\n]
    ExportDeclaration: 
      ExportKeyword:  pre=[export] sep=[ ]
      NamedExports: 
        FirstPunctuation:  pre=[{] sep=[\n\n  ]
        SyntaxList: 
          ExportSpecifier: 
            Identifier:  pre=[default] sep=[ ]
            AsKeyword:  pre=[as] sep=[ ]
            Identifier:  pre=[MyClass]
          CommaToken:  pre=[,] sep=[ ]
          ExportSpecifier: 
            Identifier:  pre=[InternalClass] sep=[ ]
            AsKeyword:  pre=[as] sep=[ ]
            Identifier:  pre=[_InternalClass]
          CommaToken:  pre=[,] sep=[\n\n  ]
          ExportSpecifier: 
            Identifier:  pre=[PreapprovedInternalClass] sep=[ ]
            AsKeyword:  pre=[as] sep=[ ]
            Identifier:  pre=[_PreapprovedInternalClass]
          CommaToken:  pre=[,] sep=[\n\n  ]
          ExportSpecifier: 
            Identifier:  pre=[__proto__]
          CommaToken:  pre=[,] sep=[\n\n  ]
          ExportSpecifier: 
            Identifier:  pre=[hasOwnProperty]
          CommaToken:  pre=[,] sep=[\n\n  ]
          ExportSpecifier: 
            Identifier:  pre=[A] sep=[\n\n]
        CloseBraceToken:  pre=[}] sep=[ ]
      FromKeyword:  pre=[from] sep=[ ]
      StringLiteral:  pre=['./folder/MyClass']
      SemicolonToken:  pre=[;] sep=[\n\n\n\n]
    ExportDeclaration: 
      ExportKeyword:  pre=[export] sep=[ ]
      NamedExports: 
        FirstPunctuation:  pre=[{] sep=[ ]
        SyntaxList: 
          ExportSpecifier: 
            Identifier:  pre=[AliasClass3] sep=[ ]
            AsKeyword:  pre=[as] sep=[ ]
            Identifier:  pre=[AliasClass4] sep=[ ]
        CloseBraceToken:  pre=[}] sep=[ ]
      FromKeyword:  pre=[from] sep=[ ]
      StringLiteral:  pre=['./folder/AliasClass3']
      SemicolonToken:  pre=[;] sep=[\n\n\n\n]
    FunctionDeclaration: 
      FunctionKeyword:  pre=[function] sep=[ ]
      Identifier:  pre=[privateFunction]
      OpenParenToken:  pre=[(]
      SyntaxList: 
      CloseParenToken:  pre=[)]
      ColonToken:  pre=[:] sep=[ ]
      NumberKeyword:  pre=[number] sep=[ ]
      Block: 
        FirstPunctuation:  pre=[{] sep=[\n\n  ]
        SyntaxList: 
          ReturnStatement: 
            ReturnKeyword:  pre=[return] sep=[ ]
            FirstLiteralToken:  pre=[123]
            SemicolonToken:  pre=[;] sep=[\n\n]
        CloseBraceToken:  pre=[}] sep=[\n\n\n\n]
    FunctionDeclaration: 
      JSDocComment:  pre=[/** ] suf=[ */] sep=[\n\n]
        FirstJSDocTagNode:  pre=[@public]
      SyntaxList: 
        ExportKeyword:  pre=[export] sep=[ ]
      FunctionKeyword:  pre=[function] sep=[ ]
      Identifier:  pre=[publicFunction]
      OpenParenToken:  pre=[(]
      SyntaxList: 
        Parameter: 
          Identifier:  pre=[param]
          ColonToken:  pre=[:] sep=[ ]
          NumberKeyword:  pre=[number]
      CloseParenToken:  pre=[)]
      ColonToken:  pre=[:] sep=[ ]
      StringKeyword:  pre=[string] sep=[ ]
      Block: 
        FirstPunctuation:  pre=[{] sep=[\n\n  ]
        SyntaxList: 
          ReturnStatement: 
            ReturnKeyword:  pre=[return] sep=[ ]
            BinaryExpression: 
              StringLiteral:  pre=['hi'] sep=[ ]
              PlusToken:  pre=[+] sep=[ ]
              Identifier:  pre=[param]
            SemicolonToken:  pre=[;] sep=[\n\n]
        CloseBraceToken:  pre=[}] sep=[\n\n\n\n]
    ExportDeclaration: 
      ExportKeyword:  pre=[export] sep=[ ]
      NamedExports: 
        FirstPunctuation:  pre=[{] sep=[ ]
        SyntaxList: 
          ExportSpecifier: 
            Identifier:  pre=[AlphaTaggedClass]
          CommaToken:  pre=[,] sep=[ ]
          ExportSpecifier: 
            Identifier:  pre=[BetaTaggedClass]
          CommaToken:  pre=[,] sep=[ ]
          ExportSpecifier: 
            Identifier:  pre=[PublicTaggedClass] sep=[ ]
        CloseBraceToken:  pre=[}] sep=[ ]
      FromKeyword:  pre=[from] sep=[ ]
      StringLiteral:  pre=['./folder/ReleaseTagTests']
      SemicolonToken:  pre=[;] sep=[\n\n]
  EndOfFileToken: 
